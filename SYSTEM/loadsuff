(in-package "USER")

(defvar *LANGUAGE*)

(defvar *INPUT-SUFFIXES*)
(defvar *OUTPUT-TABLE*)

(defvar *TAB-DESCR-FILE*)
(defvar *OUTPUT-TAB-FILE*)
(defvar *NETWORK-FILE*)

(defvar last-state-numb nil)

(defvar *HOME-DIR* "/home/lesmo/TULE/SYSTEM/")
; !!! NOTE THE SLASH AFTER THE PATHNAME !!! IT IS REQUIRED !!!!!

(defun uconcat (&rest x)
  (cond (x (format nil "~{~a~}" x)) ))

(defun concat (&rest x) (identity (intern (string (apply #'uconcat x)))))

(defun build-file-name (filen) (string (concat *HOME-DIR* filen)))

(load (build-file-name "ALLLANG/PROC-ALL/utilities"))

(format t "This procedure enables you to generate the internal representation of~%")
(format t "  the table of suffixes (endings) for a given language. For which language~%")
(format t "  you want to do this work (Italian: i; English: e; Hindi: h; French: f; Spanish: s; Catalan: c)? ~%")

    ; ************** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ****************************
    ; *** the network is stored in a .tmp file, since the generation does not account
    ;     for clitics or compound forms, that have to be handled manually
    ; ************** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ****************************
    ; *** also, for Italian, French, Spanish and Catalan, the old version is still
    ;     in use, since the new one has not yet been extensively tested

(let ((temp (check_risp '(i e h f s c) 0))
      language-path)
     (cond ((eq temp 'i)
              (setq *LANGUAGE* 'italian)
              (setq *INPUT-SUFFIXES* "ITALIAN/KB-ITA/MORPHO-KB-ITA/provasuff.dat")
              (setq *OUTPUT-TABLE* "ITALIAN/KB-ITA/MORPHO-KB-ITA/suff-tab-ita.dat")
              (setq *NETWORK-FILE* "ITALIAN/KB-ITA/MORPHO-KB-ITA/network-ita.tmp"))
           ((eq temp 'e)
              (setq *LANGUAGE* 'english)
              (setq *INPUT-SUFFIXES* "ENGLISH/KB-ENG/MORPHO-KB-ENG/suffixes-eng.dat")
              (setq *TAB-DESCR-FILE* "ENGLISH/KB-ENG/MORPHO-KB-ENG/suff-tab-descr-eng.dat")
              (setq *OUTPUT-TAB-FILE* "ENGLISH/KB-ENG/MORPHO-KB-ENG/suff-tab-eng.dat")
              (setq *NETWORK-FILE* "ENGLISH/KB-ENG/MORPHO-KB-ENG/network-eng.tmp")
              (load (build-file-name *TAB-DESCR-FILE*)))
           ((eq temp 'h)
              (setq *LANGUAGE* 'hindi)
              (setq *INPUT-SUFFIXES* "HINDI/KB-HIN/MORPHO-KB-HIN/suffixes-hin.dat")
              (setq *TAB-DESCR-FILE* "HINDI/KB-HIN/MORPHO-KB-HIN/suff-tab-descr-hin.dat")
              (setq *OUTPUT-TAB-FILE* "HINDI/KB-HIN/MORPHO-KB-HIN/suff-tab-hin.dat")
              (setq *NETWORK-FILE* "HINDI/KB-HIN/MORPHO-KB-HIN/network-hin.dat")
              (load (build-file-name *TAB-DESCR-FILE*)))
           ((eq temp 'f)
              (setq *LANGUAGE* 'french)
              (setq *INPUT-SUFFIXES* "FRENCH/KB-FR/MORPHO-KB-FR/suffixes-fr.dat")
              (setq *OUTPUT-TABLE* "FRENCH/KB-FR/MORPHO-KB-FR/suff-tab-fr.dat")
              (setq *NETWORK-FILE* "FRENCH/KB-FR/MORPHO-KB-FR/network-fr.tmp"))
           ((eq temp 's)
              (setq *LANGUAGE* 'spanish)
              (setq *INPUT-SUFFIXES* "SPANISH/KB-SPA/MORPHO-KB-SPA/suffixes-sp.dat")
              (setq *OUTPUT-TABLE* "SPANISH/KB-SPA/MORPHO-KB-SPA/suff-tab-sp.dat")
              (setq *NETWORK-FILE* "SPANISH/KB-SPA/MORPHO-KB-SPA/network-sp.tmp"))
           (t (setq *LANGUAGE* 'catalan)
              (setq *INPUT-SUFFIXES* "CATALAN/KB-CAT/MORPHO-KB-CAT/suffixes-ca.dat")
              (setq *OUTPUT-TABLE* "CATALAN/KB-CAT/MORPHO-KB-CAT/suff-tab-ca.dat")
              (setq *NETWORK-FILE* "CATALAN/KB-CAT/MORPHO-KB-CAT/network-ca.tmp"))))

(load (build-file-name *INPUT-SUFFIXES*))

(load (build-file-name "ALLLANG/PROC-ALL/MORPHO-PROC-ALL/generate-suff.lisp"))
(break)
(compile-suff)

